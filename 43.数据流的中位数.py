'''题目：如何得到一个数据流的中位数？如果从数据流中读出奇数个数的值，则中位数是排序后在中间的数值
如果读出的是偶数个值，则中位数是排序后中间两个值的平均值

思路：
    用一个数据容器保存读入的数据

实现：
    |   数据结构    |    插入时间复杂度    |    得到中位数的时间复杂度
    | 没有排序的数组 |        O(1)        |     O(n)   
    | 排序的数组    |        O(n)        |      O(1)
    | 排序的链表    |        O(n)        |      O(1)
    | 二叉搜索树    | 平均O(logn),最差O(n) |平均O(logn),最差O(n)
    | AVL树        |        O(logn)     |      O(1)
    | 最大堆和最小堆 |       O(logn)      |      O(1)

没有排序的数组：
    插入为O(1)，找到需要用partion函数，为O(n)
排序的数组：
    插入是可能需要移动O(n)，得到需要O(1)
排序的链表：
    插入也是O(n)，如果用两个指针指向中间节点，则也只需要O(1)
二叉搜索树：
    平均时间为O(logn)，若极度不平衡时，就类似排序的链表，需要O(n).
    为了得到中位数，可以添加一个字段表示节点数目，但还是需要O(n)
AVL树：
    可以避免最坏情况的二叉搜索树。通常AVL树的平衡因子是左右子树高度差，可以更改为左右子树节点
    的数目之差
最大堆和最小堆：
    中位数左边的数都小于等于中位数，右边都大于等于中位数。
    可以用最大堆存左边，用最小堆存右边，中位数就是两颗树的根节点
    
'''